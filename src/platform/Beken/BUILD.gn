# Copyright (c) 2022 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build_overrides/chip.gni")

import("${chip_root}/src/platform/device.gni")

assert(chip_device_platform == "beken")


declare_args() {
  beken_soc = "bk7235"
}

assert(beken_soc == "bk7231" || beken_soc == "bk7235", "Unknown beken_soc: ${beken_soc}")

static_library("Beken") {
  sources = [
    "../SingletonConfigurationManager.cpp",
  ]
  if(beken_soc == "bk7235"){
    sources += [
    "bk7235/BLEManagerImpl.cpp",
    "bk7235/BekenConfig.cpp",
    "bk7235/CHIPMem-Platform.cpp",
    "bk7235/ConfigurationManagerImpl.cpp",
    "bk7235/ConnectivityManagerImpl.cpp",
    "bk7235/DiagnosticDataProviderImpl.cpp",
    "bk7235/FactoryDataProvider.cpp",
    "bk7235/KeyValueStoreManagerImpl.cpp",
    "bk7235/Logging.cpp",
    "bk7235/LwIPCoreLock.cpp",
    "bk7235/NetworkCommissioningWiFiDriver.cpp",
    "bk7235/OTAImageProcessorImpl.cpp",
    "bk7235/PlatformManagerImpl.cpp",
    "bk7235/SystemTimeSupport.cpp",
    ]
  }

  deps = [
    "${chip_root}/src/lib/dnssd:platform_header",
    "${chip_root}/src/setup_payload",
  ]

  public = [ 
    "${chip_root}/src/credentials/DeviceAttestationCredsProvider.h",
    "${chip_root}/src/platform/Beken/OTAImageProcessorImpl.h",
    "${chip_root}/src/platform/Beken/BekenConfig.h",
    "${chip_root}/src/platform/Beken/FactoryDataProvider.h",
  ]

  public_deps = [
    "${chip_root}/src/crypto",
    "${chip_root}/src/platform:platform_base",
  ]
}
